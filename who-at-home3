#!/usr/bin/env node
// ping based

const humans = require('/home/pi/.config/who-at-home3.json')
const lanHost = require('./lan-host-resolve.js');

const { util, pify } = (() => {
  const util = require('util') // eslint-disable-line
  return { util, pify: util.promisify.bind(util) }
})()

const exec = (() => {
  const childProcess = require('child_process')
  return pify(childProcess.exec.bind(childProcess))
})()

const humansIpAddrs = Object.entries(humans).map(([name, hostnames]) => {
  const ipAddrs = hostnames
    .map((hostname) => {
      return lanHost.resolve(hostname, lanHost.ATTRS.IP);
    })
    .filter(ip => ip);
  return { name, ipAddrs };
})

const humansAtHome = {}

const chickIpRequests = humansIpAddrs.reduce((reqs, { ipAddrs, name }) => {
  return [...reqs, ...ipAddrs.map(async (ip) => {
    if (humansAtHome[name]) return;
    console.error('>>>', name, ip) // debug
    humansAtHome[name] = (await exec(`lan-host-check ${ ip }`)).trim() === 'here';
    console.error('<<<', name, ip, '---', humansAtHome[name])
  })];
}, []);

Promise.all(chickIpRequests)
  .then(() => console.log(JSON.stringify(humansAtHome, null, 4)))
